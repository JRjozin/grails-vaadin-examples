package tieto.bank;

import tieto.bank.admin.Account;
import tieto.bank.admin.AccountType;
import tieto.bank.state.StateHolder;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;
import tieto.bank.state.*;

public class AccountDetailForm extends CustomComponent {

	@AutoGenerated
	private GridLayout mainLayout;
	@AutoGenerated
	private Button btn_Save;
	@AutoGenerated
	private Button btn_Remove;
	@AutoGenerated
	private TextField tf_Balance;
	@AutoGenerated
	private Label lbl_Balance;

	private Account account;
	StateHolder stateHolder;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public AccountDetailForm() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		stateHolder = new StateHolder(this, new EmptyState());
	}

	public void setAccount(Account account) {
		this.account = account;
		if (AccountType.Private.equals(account.getType())) {
			this.stateHolder.setState(new PrivateAccountState());
		} else if (AccountType.Corporate.equals(account.getType())) {
			this.stateHolder.setState(new CorporateAccountState());
		}

	}

	public void refreshShow() {
		if (account != null) {
			tf_Balance.setValue(account.getBalance());
		}

	}

	@AutoGenerated
	private GridLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new GridLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		mainLayout.setColumns(2);
		mainLayout.setRows(2);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// lbl_Balance
		lbl_Balance = new Label();
		lbl_Balance.setImmediate(true);
		lbl_Balance.setWidth("-1px");
		lbl_Balance.setHeight("-1px");
		lbl_Balance.setValue("Balance");
		mainLayout.addComponent(lbl_Balance, 0, 0);
		mainLayout.setComponentAlignment(lbl_Balance, new Alignment(48));

		// tf_Balance
		tf_Balance = new TextField();
		tf_Balance.setImmediate(false);
		tf_Balance.setWidth("-1px");
		tf_Balance.setHeight("-1px");
		tf_Balance.setSecret(false);
		mainLayout.addComponent(tf_Balance, 1, 0);
		mainLayout.setComponentAlignment(tf_Balance, new Alignment(48));

		// btn_Remove
		btn_Remove = new Button();
		btn_Remove.setCaption("Remove");
		btn_Remove.setImmediate(true);
		btn_Remove.setWidth("-1px");
		btn_Remove.setHeight("-1px");
		mainLayout.addComponent(btn_Remove, 0, 1);
		mainLayout.setComponentAlignment(btn_Remove, new Alignment(48));

		// btn_Save
		btn_Save = new Button();
		btn_Save.setCaption("Save");
		btn_Save.setImmediate(true);
		btn_Save.setWidth("-1px");
		btn_Save.setHeight("-1px");
		mainLayout.addComponent(btn_Save, 1, 1);
		mainLayout.setComponentAlignment(btn_Save, new Alignment(48));

		return mainLayout;
	}

}
